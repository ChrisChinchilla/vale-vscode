{
  "name": "vale-vscode",
  "displayName": "Vale VSCode",
  "icon": ".vscode/icon.png",
  "description": "The Visual Studio Code extension for Vale.",
  "bugs": "https://github.com/chrischinchilla/vale-vscode/issues",
  "author": {
    "name": "Chris Chinchilla",
    "email": "chris@chrischinchilla.com",
    "url": "https://github.com/chrischinchilla"
  },
  "publisher": "chrischinchilla",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/chrischinchilla/vale-vscode.git"
  },
  "sponsor": {
    "url": "https://github.com/sponsors/ChrisChinchilla"
  },
  "version": "0.30.0",
  "engines": {
    "vscode": "^1.100.0",
    "node": ">=20 <=22.11"
  },
  "categories": [
    "Linters"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Vale",
      "properties": {
        "vale.maxNumberOfProblems": {
          "scope": "resource",
          "type": "number",
          "default": 100,
          "description": "Controls the maximum number of problems produced by the server."
        },
        "vale.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and the language server."
        },
        "vale.valeCLI.config": {
          "scope": "resource",
          "type": "string",
          "default": null,
          "description": "Absolute path to a Vale config file. If not specified, the default search process is used (relative to the current file)."
        },
        "vale.valeCLI.syncOnStartup": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "description": "Runs `vale sync` upon starting the language server"
        },
        "vale.valeCLI.filter": {
          "scope": "resource",
          "type": "string",
          "default": null,
          "description": "An output filter to apply when calling Vale."
        },
        "vale.valeCLI.installVale": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "description": "Automatically install and update Vale. If false, the vale executable needs to be available on the user's $PATH. And you need an accessible .vale.ini. file."
        },
        "vale.valeCLI.minAlertLevel": {
          "scope": "resource",
          "type": "string",
          "default": "inherited",
          "enum": [
            "inherited",
            "suggestion",
            "warning",
            "error"
          ],
          "markdownEnumDescriptions": [
            "Inherits the `minAlertLevel` from the active configuration file.",
            "Sets `minAlertLevel` to `suggestion`, overriding any configuration files.",
            "Sets `minAlertLevel` to `warning`, overriding any configuration files.",
            "Sets `minAlertLevel` to `error`, overriding any configuration files."
          ],
          "markdownDescription": "Defines from which level of errors and above to display in the problems output."
        },
        "vale.doNotShowWarningForFileToBeSavedBeforeLinting": {
          "type": "boolean",
          "default": false,
          "description": "Do not show warning dialog that a file must be saved to be linted."
        },
        "vale.readabilityProblemLocation": {
          "type": "string",
          "enum": [
            "status",
            "inline",
            "both"
          ],
          "default": "status",
          "markdownEnumDescriptions": [
            "Displays readability problems in the status bar.",
            "Displays readability problems inline with other problems.",
            "Displays readability problems both in the status bar and inline in the file."
          ],
          "markdownDescription": "Determines where file-level readability problems are displayed."
        },
        "vale.enableSpellcheck": {
          "type": "boolean",
          "default": false,
          "description": "Enable spell checking with Vale."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile",
    "test": "node ./out/test/runTest.js",
    "webpack": "webpack --mode production",
    "webpack-dev": "webpack --mode development --watch",
    "test-compile": "tsc -p ./"
  },
  "devDependencies": {
    "@aws-sdk/client-s3": "^3.820.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "^22.15.27",
    "@types/unzipper": "^0.10.11",
    "@types/vscode": "^1.100.0",
    "@types/which": "^3.0.4",
    "@typescript-eslint/eslint-plugin": "^8.33.0",
    "@typescript-eslint/parser": "^8.33.0",
    "eslint": "^9.27.0",
    "mocha": "^11.5.0",
    "ts-loader": "^9.5.2",
    "tslint": "^6.1.3",
    "typescript": "^5.8.3",
    "unzipper": "~0.12.3",
    "vscode-test": "^1.6.1",
    "webpack": "^5.99.9",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "vscode-languageclient": "^9.0.1"
  }
}
